<project name="CFUnited (k): FTP" basedir="." default="package">

	<target name="init">

		<property name="app.name" value="Client1App" />

		<property name="dev.root" location="DEVSERVER" />
		<property name="test.root" location="TESTSERVER" />
		<property name="locations.dev.clientroot" location="${dev.root}\${app.name}" />
		<property name="locations.test.clientroot" location="${test.root}\${app.name}" />

		<property name="locations.dev.customtags" location="${dev.root}\CustomTags" />
		<property name="locations.test.customtags" location="${test.root}\CustomTags" />

		<property name="locations.test.deploy" location="${locations.test.clientroot}\deploy" />
		<property name="locations.test.deployzip" location="${locations.test.deploy}\${app.name}.zip" />

		<echoproperties prefix="locations" />

		<!-- read all our 'secure' properties from this file; this defines the ftp.username, ftp.password, and svn.server properties -->
		<property file="unames.properties" />

	</target>

	<target name="clean" depends="init">
		<mkdir dir="${locations.test.deploy}" />
		<delete file="${locations.test.deployzip}" />
	</target>


	<!--
	PPT with all instructions for setting up FTP is here: http://mxunit.org/doc/zip/CFMeetup_AntWired.zip
	
	CFMeetup (connect presentation) demonstrating setup for SVN, FTP, and other things is here: http://coldfusion.meetup.com/17/calendar/7386772/
	-->

	<target name="package" depends="init,clean">
		<zip destfile="${locations.test.deployzip}">
			<zipfileset dir="${locations.test.clientroot}" excludes="deploy/**" prefix="inetpub\wwwroot\${app.name}" casesensitive="false" />

			<zipfileset dir="${locations.test.customtags}" includes="**/*.cfm" prefix="ColdFusion8\CustomTags" casesensitive="false" />
		</zip>
	</target>

	<target name="publish" depends="init,package">
		<property name="ftp.targetdir" value="CFUNITED_TARGET_DIR" />
		<!-- ensure our target dir exists -->
		<ftp server="${ftp.server}" userid="${ftp.username}" password="${ftp.password}" action="mkdir" remotedir="${ftp.targetdir}" />

		<!-- list that directory, so we can see what's on there -->
		<ftp server="${ftp.server}" userid="${ftp.username}" password="${ftp.password}" action="list" listing="ftplist.txt" verbose="true">
			<fileset includes="${ftp.targetdir}/**" />
		</ftp>

		<!-- move the zip file to it -->
		<ftp server="${ftp.server}" userid="${ftp.username}" password="${ftp.password}" remotedir="${ftp.targetdir}" newer="yes" serverTimeZoneConfig="America/Los_Angeles" systemTypeKey="WINDOWS" verbose="true" skipFailedTransfers="true" retriesAllowed="3">
			<fileset dir="${locations.test.deploy}" />
		</ftp>

	</target>

	<target name="publishWithModifiedSelector" depends="init,package">
		<property name="ftp.targetdir" value="CFUNITED_TARGET_DIR" />

		<!-- move the zip file to it  -->
		<ftp server="${ftp.server}" userid="${ftp.username}" password="${ftp.password}" remotedir="${ftp.targetdir}" verbose="true" skipFailedTransfers="true" retriesAllowed="3">
			<fileset dir="." includes="**/${app.name}/deploy/*.zip">
				<modified cache="propertyfile">
					<param name="cache.cachefile" value="cache.properties" />
				</modified>
			</fileset>
		</ftp>

	</target>

	<target name="initializeCacheForModifiedSelector" depends="init">
		<!-- delete the cache to force an update -->
		<delete file="cache.properties" />

		<!-- update the cache without copying files -->
		<pathconvert property="not-used">
			<fileset dir=".">
				<modified update="true" seldirs="true" cache="propertyfile" comparator="equal">
					<param name="cache.cachefile" value="cache.properties" />
				</modified>
			</fileset>
		</pathconvert>
	</target>


</project>