<project name="CFUnited (k): ScriptDef" basedir="." default="demoListGetAt">

	<!-- <import file="scripts.xml"/> -->


	<target name="init">

		<property name="libdir" location="lib" />
		<path id="ac.classpath">
			<fileset dir="${libdir}">
				<include name="**/*.jar" />
			</fileset>
		</path>
		<!-- http://sourceforge.net/projects/ant-contrib -->
		<taskdef resource="net/sf/antcontrib/antlib.xml" classpathref="ac.classpath" />
	</target>


	<target name="demoResetProperty" depends="init">
		<property name="myprop" value="one" />
		<echo message="original myprop = ${myprop}" />

		<property name="myprop" value="two" />
		<echo message="after trying again with property, myprop = ${myprop}" />

		<resetProperty name="myprop" value="two" />
		<echo message="after using resetProperty, myprop = ${myprop}" />
	</target>



	<scriptdef name="resetProperty" language="javascript">
		<attribute name="name" />
		<attribute name="value" />
			project.setProperty(attributes.get("name"),attributes.get("value"));
	</scriptdef>









	<target name="demoListGetAt" depends="init">
		<listGetAt list="one,two,three" pos="1" delim="," prop="myprop" />
		<echo message="${myprop}" />

		<listGetAt list="one,two,three" pos="2" delim="," prop="myprop" />
		<echo message="${myprop}" />
	</target>


	<scriptdef name="listGetAt" language="javascript">
		<attribute name="list" />
		<attribute name="pos" />
		<attribute name="delim" />
		<attribute name="prop" />		
			values = attributes.get("list").split(attributes.get("delim"));
			myint = parseInt(attributes.get("pos"));
			oneBasedIndex = myint-1; /* so if they pass position "1", we turn that into "0" since javascript is 0-based but we want to work in a 1-based fashion  */
			project.setProperty(attributes.get("prop"),values[oneBasedIndex]);	         
	</scriptdef>



	<!-- TEASER: How to use <for> together with listGetAt. Imagine how you could use this
	when looping over resultsets (see j_SQL.xml) -->

	<target name="nestedLoopSimulation" depends="init">
		<property name="serverlist" value="1,10.0.205.59;2,10.0.205.69" />
		<echo message="${serverlist}" />
		<!-- loop over the serverlist -->
		<for list="${serverlist}" param="serverrow" delimiter=";">
			<sequential>
				<listGetAt list="@{serverrow}" pos="1" delim="," prop="serverid" />
				<listGetAt list="@{serverrow}" pos="2" delim="," prop="serverip" />
				<echo>${serverid} = ${serverip}</echo>
			</sequential>
		</for>

		<!-- HOMEWORK: how could you use this, combined with the loopOverServers task from j_SQL.xml,
		to loop over a line-delimited result set of the format ServerID,ServerIP? -->


	</target>







</project>